{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  if (!input.trim()) return;\n  setMessages([...messages, {\n    sender: 'user',\n    text: input\n  }]);\n  try {\n    if (input.toLowerCase().includes('top 5')) {\n      const res = await axios.get('http://localhost:5000/api/top-products');\n      const response = res.data.map(p => p.name).join(', ');\n      setMessages([...messages, {\n        sender: 'bot',\n        text: `Top 5 products: ${response}`\n      }]);\n    } else if (input.toLowerCase().includes('order status') && input.match(/\\d+/)) {\n      const orderId = input.match(/\\d+/)[0];\n      const res = await axios.get(`http://localhost:5000/api/order/${orderId}`);\n      setMessages([...messages, {\n        sender: 'bot',\n        text: `Order ${orderId} status: ${res.data.status}`\n      }]);\n    } else {\n      setMessages([...messages, {\n        sender: 'bot',\n        text: 'Sorry, I didn’t understand that.'\n      }]);\n    }\n  } catch (error) {\n    console.error('API error:', error);\n    setMessages([...messages, {\n      sender: 'bot',\n      text: 'Sorry, there was an error processing your request.'\n    }]);\n  }\n  setInput('');\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","input","trim","setMessages","messages","sender","text","toLowerCase","includes","res","axios","get","response","data","map","p","name","join","match","orderId","status","error","console","setInput"],"sources":["D:/CustomerSupportChatbot/frontend/src/App.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  if (!input.trim()) return;\r\n\r\n  setMessages([...messages, { sender: 'user', text: input }]);\r\n\r\n  try {\r\n    if (input.toLowerCase().includes('top 5')) {\r\n      const res = await axios.get('http://localhost:5000/api/top-products');\r\n      const response = res.data.map(p => p.name).join(', ');\r\n      setMessages([...messages, { sender: 'bot', text: `Top 5 products: ${response}` }]);\r\n    } else if (input.toLowerCase().includes('order status') && input.match(/\\d+/)) {\r\n      const orderId = input.match(/\\d+/)[0];\r\n      const res = await axios.get(`http://localhost:5000/api/order/${orderId}`);\r\n      setMessages([...messages, { sender: 'bot', text: `Order ${orderId} status: ${res.data.status}` }]);\r\n    } else {\r\n      setMessages([...messages, { sender: 'bot', text: 'Sorry, I didn’t understand that.' }]);\r\n    }\r\n  } catch (error) {\r\n    console.error('API error:', error);\r\n    setMessages([...messages, { sender: 'bot', text: 'Sorry, there was an error processing your request.' }]);\r\n  }\r\n\r\n  setInput('');\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;EAEnBC,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEL;EAAM,CAAC,CAAC,CAAC;EAE3D,IAAI;IACF,IAAIA,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;MACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrE,MAAMC,QAAQ,GAAGH,GAAG,CAACI,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACrDd,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,mBAAmBM,QAAQ;MAAG,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM,IAAIX,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC,IAAIP,KAAK,CAACiB,KAAK,CAAC,KAAK,CAAC,EAAE;MAC7E,MAAMC,OAAO,GAAGlB,KAAK,CAACiB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,mCAAmCQ,OAAO,EAAE,CAAC;MACzEhB,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,SAASa,OAAO,YAAYV,GAAG,CAACI,IAAI,CAACO,MAAM;MAAG,CAAC,CAAC,CAAC;IACpG,CAAC,MAAM;MACLjB,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAmC,CAAC,CAAC,CAAC;IACzF;EACF,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClClB,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAqD,CAAC,CAAC,CAAC;EAC3G;EAEAiB,QAAQ,CAAC,EAAE,CAAC;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}